name: Optimized CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_REPO: thaksha98
  KUBE_NAMESPACE: lugx

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.filter.outputs.frontend }}
      game: ${{ steps.filter.outputs.game }}
      order: ${{ steps.filter.outputs.order }}
      analytics: ${{ steps.filter.outputs.analytics }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            frontend:
              - 'frontend/**'
            game:
              - 'backend/game-service/**'
            order:
              - 'backend/order-service/**'
            analytics:
              - 'backend/analytics-service/**'

  build-and-push:
    needs: detect-changes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Frontend
        if: needs.detect-changes.outputs.frontend == 'true'
        uses: docker/build-push-action@v5
        with:
          context: frontend
          file: frontend/Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_REPO }}/lugx-frontend:${{ github.sha }}
            ${{ env.DOCKER_REPO }}/lugx-frontend:cache
          cache-from: type=registry,ref=${{ env.DOCKER_REPO }}/lugx-frontend:cache
          cache-to: type=inline

      - name: Build and push Game Service
        if: needs.detect-changes.outputs.game == 'true'
        uses: docker/build-push-action@v5
        with:
          context: backend/game-service
          file: backend/game-service/Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_REPO }}/lugx-game-service:${{ github.sha }}
            ${{ env.DOCKER_REPO }}/lugx-game-service:cache
          cache-from: type=registry,ref=${{ env.DOCKER_REPO }}/lugx-game-service:cache
          cache-to: type=inline

      - name: Build and push Order Service
        if: needs.detect-changes.outputs.order == 'true'
        uses: docker/build-push-action@v5
        with:
          context: backend/order-service
          file: backend/order-service/Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_REPO }}/lugx-order-service:${{ github.sha }}
            ${{ env.DOCKER_REPO }}/lugx-order-service:cache
          cache-from: type=registry,ref=${{ env.DOCKER_REPO }}/lugx-order-service:cache
          cache-to: type=inline

      - name: Build and push Analytics Service
        if: needs.detect-changes.outputs.analytics == 'true'
        uses: docker/build-push-action@v5
        with:
          context: backend/analytics-service
          file: backend/analytics-service/Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_REPO }}/lugx-analytics-service:${{ github.sha }}
            ${{ env.DOCKER_REPO }}/lugx-analytics-service:cache
          cache-from: type=registry,ref=${{ env.DOCKER_REPO }}/lugx-analytics-service:cache
          cache-to: type=inline

  deploy:
    needs: [build-and-push, detect-changes]
    runs-on: self-hosted
    env:
      KUBECONFIG_DATA: ${{ secrets.KUBE_CONFIG }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/v1.32.3/bin/linux/amd64/kubectl"
          chmod +x kubectl
          mkdir -p $HOME/bin && mv kubectl $HOME/bin/
          echo "$HOME/bin" >> $GITHUB_PATH

      - name: Configure kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "$KUBECONFIG_DATA" | base64 -d > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Deploy Frontend
        if: needs.detect-changes.outputs.frontend == 'true'
        run: |
          kubectl set image deployment/frontend-deployment-blue frontend=${{ env.DOCKER_REPO }}/lugx-frontend:${{ github.sha }} -n lugx

      - name: Deploy Game Service
        if: needs.detect-changes.outputs.game == 'true'
        run: |
          kubectl set image deployment/game-service game-service=${{ env.DOCKER_REPO }}/lugx-game-service:${{ github.sha }} -n lugx

      - name: Deploy Order Service
        if: needs.detect-changes.outputs.order == 'true'
        run: |
          kubectl set image deployment/order-service order-service=${{ env.DOCKER_REPO }}/lugx-order-service:${{ github.sha }} -n lugx

      - name: Deploy Analytics Service
        if: needs.detect-changes.outputs.analytics == 'true'
        run: |
          kubectl set image deployment/analytics-service analytics-service=${{ env.DOCKER_REPO }}/lugx-analytics-service:${{ github.sha }} -n lugx

      - name: Verify Deployments
        run: |
          kubectl get pods -n lugx
          kubectl get svc -n lugx
